#!/bin/bash

# List of usefull colors
COLOR_RESET="\033[0m"
COLOR_INFO="\033[0;32m"
COLOR_ITEM="\033[0;34m"
COLOR_QUES="\033[0;35m"
COLOR_WARN="\033[0;33m"
COLOR_BOLD="\033[1m"
COLOR_UNDE="\033[4m"

#FIXME repeated code
function run_local_ros_workspace()
{
	docker run --user `id -u`:sudo --hostname $HOSTNAME --net=$DOCKER_NET --device=/dev/dri:/dev/dri --privileged -e "QT_X11_NO_MITSHM=1" -e GAZEBO_MODEL_PATH=/opt/ros/melodic/share/wb_gazebo_resources/models/ -e SHELL -e DISPLAY -e DOCKER=1 --name $CONTAINER_NAME \
	--gpus all \
	--device=/dev/ttyUSB0 \
	--volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
	--workdir="/home/$USER" \
	--volume="/etc/group:/etc/group:ro" \
        --volume="$HOME/$1:$HOME/$1" \
	--volume="/etc/passwd:/etc/passwd:ro" \
	--volume="/etc/shadow:/etc/shadow:ro" \
	--volume="/etc/sudoers.d:/etc/sudoers.d:ro" \
	--volume="$HOME/.ros:$HOME/.ros" \
	--volume="$HOME/.gazebo:$HOME/.gazebo" \
	--volume="$HOME/.ignition:$HOME/.ignition" \
	--volume="$HOME/.rviz:$HOME/.rviz" \
	-it $IMAGE_NAME $SHELL -c "eval export HOME=$HOME; cd $HOME; source /opt/ros/$ROS_DISTRO/setup.bash; source /opt/xbot/setup.sh; source $HOME/$1/devel/setup.bash; roslaunch wb_controller wb_controller_bringup.launch robot_name:=$ROBOT_NAME world_name:=$WORLD_NAME.world full_gui:=$GUI"
}

function run_docker_ros_workspace()
{
	docker run --user `id -u`:sudo --hostname $HOSTNAME --net=$DOCKER_NET --device=/dev/dri:/dev/dri --privileged -e "QT_X11_NO_MITSHM=1" -e GAZEBO_MODEL_PATH=/opt/ros/melodic/share/wb_gazebo_resources/models/ -e SHELL -e DISPLAY -e DOCKER=1 --name $CONTAINER_NAME \
	--gpus all \
	--device=/dev/ttyUSB0 \
	--volume="/tmp/.X11-unix:/tmp/.X11-unix:rw" \
	--workdir="/home/$USER" \
	--volume="/etc/group:/etc/group:ro" \
	--volume="/etc/passwd:/etc/passwd:ro" \
	--volume="/etc/shadow:/etc/shadow:ro" \
	--volume="/etc/sudoers.d:/etc/sudoers.d:ro" \
	--volume="$HOME/.ros:$HOME/.ros" \
	--volume="$HOME/.gazebo:$HOME/.gazebo" \
	--volume="$HOME/.ignition:$HOME/.ignition" \
	--volume="$HOME/.rviz:$HOME/.rviz" \
        -it $IMAGE_NAME $SHELL -c "eval export HOME=$HOME; cd $HOME; source /opt/ros/$ROS_DISTRO/setup.bash; source /opt/xbot/setup.sh; roslaunch wb_controller wb_controller_bringup.launch robot_name:=$ROBOT_NAME world_name:=$WORLD_NAME.world full_gui:=$GUI"
}

# parse yaml files and create bash variables
function parse_yaml(){
    local prefix=$2
    local s
    local w
    local fs
    s='[[:space:]]*'
    w='[a-zA-Z0-9_]*'
    fs="$(echo @|tr @ '\034')"
    sed -ne "s|^\($s\)\($w\)$s:$s\"\(.*\)\"$s\$|\1$fs\2$fs\3|p" \
        -e "s|^\($s\)\($w\)$s[:-]$s\(.*\)$s\$|\1$fs\2$fs\3|p" "$1" |
    awk -F"$fs" '{
    indent = length($1)/2;
    vname[indent] = $2;
    for (i in vname) {if (i > indent) {delete vname[i]}}
        if (length($3) > 0) {
            vn=""; for (i=0; i<indent; i++) {vn=(vn)(vname[i])("_")}
            printf("%s%s%s=(\"%s\")\n", "'"$prefix"'",vn, $2, $3);
        }
    }' | sed 's/_=/+=/g'
}

function create_yaml_variables(){
    local yaml_file="$1"
    eval "$(parse_yaml "$yaml_file")"
}

